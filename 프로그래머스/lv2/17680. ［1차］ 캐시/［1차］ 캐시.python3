def solution(cacheSize, cities): # c 0~30, citys <= 100,000
    answer = 0
    
    cache = {}
       
    if cacheSize == 0:
        return len(cities)*5
    
    time = 0
    for city in cities:
        city = city.lower()
        if city in cache:
            cache[city] = time
            answer += 1
        else:
            if len(cache) >= cacheSize:
                minV, minK = 1e7, -1
                for key, val in list(cache.items()):
                    if minV > val:
                         minK, minV = key, val
                del cache[minK]
            cache[city] = time
            answer += 5
            
        time += 1
        
    return answer