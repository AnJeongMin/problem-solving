import heapq

def solution(board):
    answer = []
    n = len(board)
    dir = [[1, 0], [0, 1], [-1, 0], [0, -1]] # 우, 하, 좌, 상
    
    q = []
    visited = {}
    heapq.heappush(q, (0, 0, 0, 0)) # money, x, y, d
    heapq.heappush(q, (0, 0, 0, 1))
    while q:
        money, x, y, didx = heapq.heappop(q)
        if visited.get((x, y, didx)):
            continue
        else: visited[(x, y, didx)] = True
        
        if x == n-1 and y == n-1:
            return money
        for i in range(4):
            if didx == (i+2)%4:
                continue
            d = dir[i]
            tx, ty = x+d[0], y+d[1]
            
            if 0 <= tx < n and 0 <= ty < n and board[ty][tx] == 0:
                if didx == i:
                    heapq.heappush(q, (money+100, tx, ty, i))
                else:
                    heapq.heappush(q, (money+600, tx, ty, i))  
                #print(tx, ty, i, money)
                
    
    return 